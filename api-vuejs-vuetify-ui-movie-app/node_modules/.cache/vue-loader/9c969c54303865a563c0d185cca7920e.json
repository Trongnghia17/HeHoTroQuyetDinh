{"remainingRequest":"D:\\HeHoTroQuyetDinh\\api-vuejs-vuetify-ui-movie-app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\HeHoTroQuyetDinh\\api-vuejs-vuetify-ui-movie-app\\src\\components\\PopularMovies.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\HeHoTroQuyetDinh\\api-vuejs-vuetify-ui-movie-app\\src\\components\\PopularMovies.vue","mtime":1716766657727},{"path":"D:\\HeHoTroQuyetDinh\\api-vuejs-vuetify-ui-movie-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\HeHoTroQuyetDinh\\api-vuejs-vuetify-ui-movie-app\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\HeHoTroQuyetDinh\\api-vuejs-vuetify-ui-movie-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\HeHoTroQuyetDinh\\api-vuejs-vuetify-ui-movie-app\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgTW92aWVDYXJkIGZyb20gJy4uL2NvbXBvbmVudHMvTW92aWVDYXJkJw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIGNvbXBvbmVudHM6IHsNCiAgICBNb3ZpZUNhcmQsDQogIH0sDQogIGRhdGE6IGZ1bmN0aW9uICgpIHsNCiAgICByZXR1cm4gew0KICAgICAgbW92aWVzOiBbXSwNCiAgICAgIGdlbnJlczogW10sDQogICAgICBzZWxlY3RlZEdlbnJlOiBudWxsLA0KICAgICAgc2VsZWN0ZWRSYXRpbmc6IDAsDQogICAgICBmaWx0ZXJlZE1vdmllczogW10sDQogICAgICByYXRpbmdPcHRpb25zOiBbDQogICAgICAgIHsgbGFiZWw6ICcwIHNhbyB0cuG7nyBsw6puJywgdmFsdWU6IDEgfSwNCiAgICAgICAgeyBsYWJlbDogJzEgc2FvIHRy4bufIGzDqm4nLCB2YWx1ZTogMiB9LA0KICAgICAgICB7IGxhYmVsOiAnMiBzYW8gdHLhu58gbMOqbicsIHZhbHVlOiAzIH0sDQogICAgICAgIHsgbGFiZWw6ICczIHNhbyB0cuG7nyBsw6puJywgdmFsdWU6IDQgfSwNCiAgICAgICAgeyBsYWJlbDogJzQgc2FvIHRy4bufIGzDqm4nLCB2YWx1ZTogNSB9LA0KICAgICAgXSwNCiAgICB9Ow0KICB9LA0KICBhc3luYyBtb3VudGVkKCkgew0KICAgIHRoaXMuZmV0Y2hHZW5yZXMoKTsNCiAgICB0aGlzLmZldGNoTW92aWVzKCk7DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBhc3luYyBmZXRjaEdlbnJlcygpIHsNCiAgICAgIHRyeSB7DQogICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy4kaHR0cC5nZXQoIi9nZW5yZS9tb3ZpZS9saXN0Iik7DQogICAgICAgIHRoaXMuZ2VucmVzID0gcmVzcG9uc2UuZGF0YS5nZW5yZXMubWFwKGdlbnJlID0+IHsNCiAgICAgICAgICBzd2l0Y2ggKGdlbnJlLm5hbWUpIHsNCiAgICAgICAgICAgIGNhc2UgJ0FjdGlvbic6DQogICAgICAgICAgICAgIHJldHVybiB7IC4uLmdlbnJlLCBuYW1lOiAnSMOgbmggxJHhu5luZycgfTsNCiAgICAgICAgICAgIGNhc2UgJ0FkdmVudHVyZSc6DQogICAgICAgICAgICAgIHJldHVybiB7IC4uLmdlbnJlLCBuYW1lOiAnUGhpw6p1IGzGsHUnIH07DQogICAgICAgICAgICBjYXNlICdBbmltYXRpb24nOg0KICAgICAgICAgICAgICByZXR1cm4geyAuLi5nZW5yZSwgbmFtZTogJ0hv4bqhdCBow6xuaCcgfTsNCiAgICAgICAgICAgIGNhc2UgJ0NvbWVkeSc6DQogICAgICAgICAgICAgIHJldHVybiB7IC4uLmdlbnJlLCBuYW1lOiAnSMOgaScgfTsNCiAgICAgICAgICAgIGNhc2UgJ0NyaW1lJzoNCiAgICAgICAgICAgICAgcmV0dXJuIHsgLi4uZ2VucmUsIG5hbWU6ICdU4buZaSBwaOG6oW0nIH07DQogICAgICAgICAgICBjYXNlICdEb2N1bWVudGFyeSc6DQogICAgICAgICAgICAgIHJldHVybiB7IC4uLmdlbnJlLCBuYW1lOiAnVMOgaSBsaeG7h3UnIH07DQogICAgICAgICAgICBjYXNlICdEcmFtYSc6DQogICAgICAgICAgICAgIHJldHVybiB7IC4uLmdlbnJlLCBuYW1lOiAnQ2jDrW5oIGvhu4tjaCcgfTsNCiAgICAgICAgICAgIGNhc2UgJ0ZhbWlseSc6DQogICAgICAgICAgICAgIHJldHVybiB7IC4uLmdlbnJlLCBuYW1lOiAnR2lhIMSRw6xuaCcgfTsNCiAgICAgICAgICAgIGNhc2UgJ0ZhbnRhc3knOg0KICAgICAgICAgICAgICByZXR1cm4geyAuLi5nZW5yZSwgbmFtZTogJ0dp4bqjIHTGsOG7n25nJyB9Ow0KICAgICAgICAgICAgY2FzZSAnSGlzdG9yeSc6DQogICAgICAgICAgICAgIHJldHVybiB7IC4uLmdlbnJlLCBuYW1lOiAnTOG7i2NoIHPhu60nIH07DQogICAgICAgICAgICBjYXNlICdIb3Jyb3InOg0KICAgICAgICAgICAgICByZXR1cm4geyAuLi5nZW5yZSwgbmFtZTogJ0tpbmggZOG7iycgfTsNCiAgICAgICAgICAgIGNhc2UgJ011c2ljJzoNCiAgICAgICAgICAgICAgcmV0dXJuIHsgLi4uZ2VucmUsIG5hbWU6ICfDgm0gbmjhuqFjJyB9Ow0KICAgICAgICAgICAgY2FzZSAnTXlzdGVyeSc6DQogICAgICAgICAgICAgIHJldHVybiB7IC4uLmdlbnJlLCBuYW1lOiAnQsOtIOG6qW4nIH07DQogICAgICAgICAgICBjYXNlICdSb21hbmNlJzoNCiAgICAgICAgICAgICAgcmV0dXJuIHsgLi4uZ2VucmUsIG5hbWU6ICdMw6NuZyBt4bqhbicgfTsNCiAgICAgICAgICAgIGNhc2UgJ1NjaWVuY2UgRmljdGlvbic6DQogICAgICAgICAgICAgIHJldHVybiB7IC4uLmdlbnJlLCBuYW1lOiAnS2hvYSBo4buNYyB2aeG7hW4gdMaw4bufbmcnIH07DQogICAgICAgICAgICBjYXNlICdUViBNb3ZpZSc6DQogICAgICAgICAgICAgIHJldHVybiB7IC4uLmdlbnJlLCBuYW1lOiAnUGhpbSB0cnV54buBbiBow6xuaCcgfTsNCiAgICAgICAgICAgIGNhc2UgJ1RocmlsbGVyJzoNCiAgICAgICAgICAgICAgcmV0dXJuIHsgLi4uZ2VucmUsIG5hbWU6ICdHaeG6rXQgZ8OibicgfTsNCiAgICAgICAgICAgIGNhc2UgJ1dhcic6DQogICAgICAgICAgICAgIHJldHVybiB7IC4uLmdlbnJlLCBuYW1lOiAnQ2hp4bq/biB0cmFuaCcgfTsNCiAgICAgICAgICAgIGNhc2UgJ1dlc3Rlcm4nOg0KICAgICAgICAgICAgICByZXR1cm4geyAuLi5nZW5yZSwgbmFtZTogJ1Zp4buFbiBUw6J5JyB9Ow0KICAgICAgICAgICAgZGVmYXVsdDoNCiAgICAgICAgICAgICAgcmV0dXJuIGdlbnJlOw0KICAgICAgICAgIH0NCiAgICAgICAgfSk7DQogICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7DQogICAgICB9DQogICAgfSwNCiAgICBhc3luYyBmZXRjaE1vdmllcygpIHsNCiAgICAgIHRyeSB7DQogICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy4kaHR0cC5nZXQoIi9tb3ZpZS9wb3B1bGFyIik7DQogICAgICAgIHRoaXMubW92aWVzID0gcmVzcG9uc2UuZGF0YS5yZXN1bHRzOw0KICAgICAgICB0aGlzLmZpbHRlcmVkTW92aWVzID0gdGhpcy5tb3ZpZXM7DQogICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7DQogICAgICB9DQogICAgfSwNCiAgICBmaWx0ZXJNb3ZpZXMoKSB7DQogICAgICB0aGlzLmZpbHRlcmVkTW92aWVzID0gdGhpcy5tb3ZpZXMuZmlsdGVyKG1vdmllID0+IHsNCiAgICAgICAgY29uc3QgbWF0Y2hlc0dlbnJlID0gdGhpcy5zZWxlY3RlZEdlbnJlID8gbW92aWUuZ2VucmVfaWRzLmluY2x1ZGVzKHRoaXMuc2VsZWN0ZWRHZW5yZSkgOiB0cnVlOw0KICAgICAgICBjb25zdCBtYXRjaGVzUmF0aW5nID0gbW92aWUudm90ZV9hdmVyYWdlID49IHRoaXMuc2VsZWN0ZWRSYXRpbmcgKiAyIC0gMjsNCiAgICAgICAgcmV0dXJuIG1hdGNoZXNHZW5yZSAmJiBtYXRjaGVzUmF0aW5nOw0KICAgICAgfSk7DQogICAgfQ0KICB9DQp9DQo="},{"version":3,"sources":["PopularMovies.vue"],"names":[],"mappings":";AAuCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PopularMovies.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"mx-3\">\r\n    <h2 class=\"mt-2 ml-3\">Phim nổi bật</h2>\r\n    <v-row class=\"ml-1 mr-1\">\r\n      <v-col cols=\"6\" sm=\"3\">\r\n        <v-select\r\n            v-model=\"selectedGenre\"\r\n            :items=\"genres\"\r\n            item-text=\"name\"\r\n            item-value=\"id\"\r\n            label=\"Chọn thể loại\"\r\n            @change=\"filterMovies\"\r\n            :menu-props=\"{ offsetY: true }\"\r\n        ></v-select>\r\n      </v-col>\r\n      <v-col cols=\"6\" sm=\"3\">\r\n        <v-select\r\n            v-model=\"selectedRating\"\r\n            :items=\"ratingOptions\"\r\n            item-text=\"label\"\r\n            item-value=\"value\"\r\n            label=\"Đánh giá tối thiểu\"\r\n            @change=\"filterMovies\"\r\n            :menu-props=\"{ offsetY: true }\"\r\n        ></v-select>\r\n      </v-col>\r\n\r\n    </v-row>\r\n    <v-container fluid>\r\n      <v-row>\r\n        <v-col cols=\"12\" sm=\"3\" v-for=\"movie in filteredMovies\" :key=\"movie.id\">\r\n          <MovieCard :movie=\"movie\" :genres=\"genres\" />\r\n        </v-col>\r\n      </v-row>\r\n    </v-container>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport MovieCard from '../components/MovieCard'\r\n\r\nexport default {\r\n  components: {\r\n    MovieCard,\r\n  },\r\n  data: function () {\r\n    return {\r\n      movies: [],\r\n      genres: [],\r\n      selectedGenre: null,\r\n      selectedRating: 0,\r\n      filteredMovies: [],\r\n      ratingOptions: [\r\n        { label: '0 sao trở lên', value: 1 },\r\n        { label: '1 sao trở lên', value: 2 },\r\n        { label: '2 sao trở lên', value: 3 },\r\n        { label: '3 sao trở lên', value: 4 },\r\n        { label: '4 sao trở lên', value: 5 },\r\n      ],\r\n    };\r\n  },\r\n  async mounted() {\r\n    this.fetchGenres();\r\n    this.fetchMovies();\r\n  },\r\n  methods: {\r\n    async fetchGenres() {\r\n      try {\r\n        const response = await this.$http.get(\"/genre/movie/list\");\r\n        this.genres = response.data.genres.map(genre => {\r\n          switch (genre.name) {\r\n            case 'Action':\r\n              return { ...genre, name: 'Hành động' };\r\n            case 'Adventure':\r\n              return { ...genre, name: 'Phiêu lưu' };\r\n            case 'Animation':\r\n              return { ...genre, name: 'Hoạt hình' };\r\n            case 'Comedy':\r\n              return { ...genre, name: 'Hài' };\r\n            case 'Crime':\r\n              return { ...genre, name: 'Tội phạm' };\r\n            case 'Documentary':\r\n              return { ...genre, name: 'Tài liệu' };\r\n            case 'Drama':\r\n              return { ...genre, name: 'Chính kịch' };\r\n            case 'Family':\r\n              return { ...genre, name: 'Gia đình' };\r\n            case 'Fantasy':\r\n              return { ...genre, name: 'Giả tưởng' };\r\n            case 'History':\r\n              return { ...genre, name: 'Lịch sử' };\r\n            case 'Horror':\r\n              return { ...genre, name: 'Kinh dị' };\r\n            case 'Music':\r\n              return { ...genre, name: 'Âm nhạc' };\r\n            case 'Mystery':\r\n              return { ...genre, name: 'Bí ẩn' };\r\n            case 'Romance':\r\n              return { ...genre, name: 'Lãng mạn' };\r\n            case 'Science Fiction':\r\n              return { ...genre, name: 'Khoa học viễn tưởng' };\r\n            case 'TV Movie':\r\n              return { ...genre, name: 'Phim truyền hình' };\r\n            case 'Thriller':\r\n              return { ...genre, name: 'Giật gân' };\r\n            case 'War':\r\n              return { ...genre, name: 'Chiến tranh' };\r\n            case 'Western':\r\n              return { ...genre, name: 'Viễn Tây' };\r\n            default:\r\n              return genre;\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    },\r\n    async fetchMovies() {\r\n      try {\r\n        const response = await this.$http.get(\"/movie/popular\");\r\n        this.movies = response.data.results;\r\n        this.filteredMovies = this.movies;\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    },\r\n    filterMovies() {\r\n      this.filteredMovies = this.movies.filter(movie => {\r\n        const matchesGenre = this.selectedGenre ? movie.genre_ids.includes(this.selectedGenre) : true;\r\n        const matchesRating = movie.vote_average >= this.selectedRating * 2 - 2;\r\n        return matchesGenre && matchesRating;\r\n      });\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\nv-select {\r\n  max-height: 40vh;\r\n  overflow-y: auto;\r\n}\r\n</style>\r\n"]}]}
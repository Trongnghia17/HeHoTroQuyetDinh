{"remainingRequest":"D:\\HeHoTroQuyetDinh\\api-vuejs-vuetify-ui-movie-app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\HeHoTroQuyetDinh\\api-vuejs-vuetify-ui-movie-app\\src\\components\\NavBar.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\HeHoTroQuyetDinh\\api-vuejs-vuetify-ui-movie-app\\src\\components\\NavBar.vue","mtime":1716618165791},{"path":"D:\\HeHoTroQuyetDinh\\api-vuejs-vuetify-ui-movie-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\HeHoTroQuyetDinh\\api-vuejs-vuetify-ui-movie-app\\node_modules\\babel-loader\\lib\\index.js","mtime":1716061179295},{"path":"D:\\HeHoTroQuyetDinh\\api-vuejs-vuetify-ui-movie-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\HeHoTroQuyetDinh\\api-vuejs-vuetify-ui-movie-app\\node_modules\\vue-loader\\lib\\index.js","mtime":1716061158047}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQpleHBvcnQgZGVmYXVsdCB7DQogIGRhdGE6ICgpID0+ICh7DQogICAgZHJhd2VyOiBudWxsLA0KICAgIG1vZGVsOiAnJywNCiAgICBzZWFyY2g6IG51bGwsDQogICAgbW92aWVzOiBbXSwNCiAgICBzZWxlY3RlZEdlbnJlOiBudWxsLA0KICAgIGdlbnJlczogW10NCiAgfSksDQogIG1vdW50ZWQoKSB7DQogICAgdGhpcy5sb2FkTW92aWVzKCk7DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBsb2FkTW92aWVzOiBhc3luYyBmdW5jdGlvbiAoKSB7DQogICAgICB0cnkgew0KICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMuJGh0dHAuZ2V0KCIvbW92aWUvcG9wdWxhciIpOw0KICAgICAgICB0aGlzLm1vdmllcyA9IHJlc3BvbnNlLmRhdGEucmVzdWx0czsNCg0KICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOw0KICAgICAgfQ0KICAgIH0NCiAgfQ0KfQ0K"},{"version":3,"sources":["NavBar.vue"],"names":[],"mappings":";AA0DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"NavBar.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <nav>\r\n<!--    <v-system-bar app dark>-->\r\n<!--      <v-spacer></v-spacer>-->\r\n<!--      <v-icon>mdi-minus</v-icon>-->\r\n<!--      <v-icon>mdi-checkbox-blank-outline</v-icon>-->\r\n<!--      <v-icon>mdi-close</v-icon>-->\r\n<!--    </v-system-bar>-->\r\n    <v-autocomplete\r\n        v-model=\"selectedGenre\"\r\n        :items=\"genres\"\r\n        item-text=\"name\"\r\n        item-value=\"id\"\r\n        label=\"Search by genre\"\r\n        return-object\r\n    ></v-autocomplete>\r\n    <v-btn @click=\"searchByGenre\">Search</v-btn>\r\n    <v-app-bar app color=\"white\" dark>\r\n      <img src=\"../Images/logoBate.png\" height=\"100\" />\r\n      <v-btn style=\"color: black\" text class=\"ml-2\" to=\"/\">Phim</v-btn>\r\n      <v-btn style=\"color: black\" text class=\"ml-2\" to=\"/actors\">Diễn viên</v-btn>\r\n      <v-btn style=\"color: black\" text class=\"ml-2\">Thông tin</v-btn>\r\n      <v-btn style=\"color: black\" text class=\"ml-2\">Liên hệ</v-btn>\r\n      <v-spacer></v-spacer>\r\n      <v-autocomplete style=\"margin-bottom: -12px\"\r\n          clearable\r\n          hide-no-data\r\n          hide-selected\r\n          color=\"black\"\r\n          label=\"search\"\r\n          prepend-inner-icon=\"search\"\r\n          flat\r\n          :items=\"movies\"\r\n          item-text=\"title\"\r\n          item-value=\"id\"\r\n          id=\"search\"\r\n      >\r\n        <template v-slot:item=\"{item}\">\r\n          <v-btn style=\"color:black;;\" text :to=\"`/movie/${item.id}`\">{{ item.title }}</v-btn>\r\n        </template>\r\n      </v-autocomplete>\r\n      <v-btn icon>\r\n        <v-badge color=\"green\" content=\"2\" overlap>\r\n          <v-icon color=\"black\">far fa-bell</v-icon>\r\n        </v-badge>\r\n      </v-btn>\r\n      <v-badge bordered bottom color=\"green\" dot offset-x=\"10\" offset-y=\"10\">\r\n        <v-avatar size=\"40\">\r\n          <v-img\r\n              src=\"../Images/Nghia.jpg\"\r\n          ></v-img>\r\n        </v-avatar>\r\n      </v-badge>\r\n    </v-app-bar>\r\n  </nav>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data: () => ({\r\n    drawer: null,\r\n    model: '',\r\n    search: null,\r\n    movies: [],\r\n    selectedGenre: null,\r\n    genres: []\r\n  }),\r\n  mounted() {\r\n    this.loadMovies();\r\n  },\r\n  methods: {\r\n    loadMovies: async function () {\r\n      try {\r\n        const response = await this.$http.get(\"/movie/popular\");\r\n        this.movies = response.data.results;\r\n\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]}]}